// 既定値を上書きするには、このファイル内にキー バインドを挿入します
[
  {
    "key": "cmd+r",
    "command": "workbench.action.reloadWindow"
  },
  {
    "key": "alt+z 8",
    "command": "-ghciHelper.reload"
  },
  {
    "key": "ctrl+c ctrl+r",
    "command": "-ghciHelper.reload"
  },
  {
    "key": "shift+alt+down",
    "command": "workbench.action.navigateDown"
  },
  {
    "key": "shift+alt+right",
    "command": "workbench.action.navigateRight"
  },
  {
    "key": "shift+alt+up",
    "command": "workbench.action.navigateUp"
  },
  {
    "key": "shift+alt+left",
    "command": "workbench.action.navigateLeft"
  },
  {
    "key": "shift+cmd+[BracketLeft]",
    "command": "workbench.action.terminal.focus"
  },
  {
    "key": "cmd+a",
    "command": "editor.action.selectAll"
  },
  {
    "key": "shift+alt+n",
    "command": "editor.action.selectToBracket"
  },
  {
    "key": "ctrl+cmd+n",
    "command": "editor.action.jumpToBracket",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+cmd+[IntlYen]",
    "command": "-editor.action.jumpToBracket",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+c [Quote]",
    "command": "extension.greek-complete",
    "when": "editorTextFocus && editorLangId == 'latex'"
  },
  {
    "key": "ctrl+c [BracketLeft]",
    "command": "extension.font-complete",
    "when": "editorTextFocus && editorLangId == 'latex'"
  },
  {
    "key": "cmd+l",
    "command": "workbench.action.gotoLine"
  },
  {
    "key": "alt+cmd+c",
    "command": "workbench.action.terminal.openNativeConsole",
    "when": "!terminalFocus"
  },
  {
    "key": "shift+cmd+c",
    "command": "-workbench.action.terminal.openNativeConsole",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+c ctrl+v",
    "command": "extension.coq.query.check",
    "when": "editorTextFocus && editorLangId == 'coq'"
  },
  {
    "key": "shift+cmd+c",
    "command": "-extension.coq.query.check",
    "when": "editorTextFocus && editorLangId == 'coq'"
  },
  {
    "key": "ctrl+h ctrl+p",
    "command": "git.push"
  },
  {
    "key": "shift+cmd+c",
    "command": "git.commitStaged"
  },
  {
    "key": "alt+g g",
    "command": "-workbench.action.gotoLine"
  },
  {
    "key": "ctrl+g",
    "command": "-workbench.action.gotoLine"
  },
  {
    "key": "ctrl+c ctrl+i",
    "command": "haskell.addImport"
  },
  {
    "key": "ctrl+c ctrl+e",
    "command": "haskell.addExtension"
  },
  {
    "key": "ctrl+x b",
    "command": "-workbench.action.showAllEditors"
  },
  {
    "key": "ctrl+x b",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "ctrl+x ctrl+f",
    "command": "-workbench.action.quickOpen",
    "when": "editorTextFocus && editorLangId == latex"
  },
  {
    "key": "ctrl+a",
    "command": "-closeFindWidget",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "ctrl+r",
    "command": "-actions.find",
    "when": "findWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+r",
    "command": "-editor.action.previousMatchFindAction",
    "when": "findWidgetVisible"
  },
  {
    "key": "ctrl+r",
    "command": "-actions.find",
    "when": "!findWidgetVisible"
  },
  {
    "key": "ctrl+[IntlRo]",
    "command": "-emacs.C-/",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+e",
    "command": "-closeFindWidget",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "up",
    "command": "-closeFindWidget",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "down",
    "command": "-closeFindWidget",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "ctrl+cmd+b",
    "command": "markdown.extension.editing.toggleBold",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
  },
  {
    "key": "cmd+b",
    "command": "-markdown.extension.editing.toggleBold",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
  },
  {
    "key": "cmd+b",
    "command": "-markdown.extension.editing.toggleBold",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
  },
  {
    "key": "cmd+b",
    "command": "-markdown.extension.editing.toggleBold",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
  },
  {
    "key": "shift+cmd+v",
    "command": "-markdown.showPreview",
    "when": "editorLangId == 'markdown'"
  },
  {
    "key": "shift+cmd+v",
    "command": "-markdown.extension.togglePreview",
    "when": "!terminalFocus"
  },
  {"key": "ctrl+c ctrl+f",
    "command": "latex-workshop.synctex"

  },
  {
    "key": "ctrl+c b",
    "command": "extension.complete.catex.environment"
  },
  {
    "key": "ctrl+k",
    "command": "-emacs.C-k"
  },
  {
    "key": "ctrl+k",
    "command": "deleteAllRight",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+k",
    "command": "editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+z",
    "command": "-workbench.view.extension.bazel-explorer"
  },
  {
    "key": "alt+[Semicolon]",
    "command": "editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+a",
    "command": "-editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+alt+e",
    "command": "todo.toggleDone",
    "when": "editorTextFocus && editorLangId == 'todo'"
  }
]